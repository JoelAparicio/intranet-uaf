{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-8d6203f4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"threeContainer\",\n  class: \"three-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_hoisted_1"],"sources":["C:\\laragon\\www\\intranet-frontend\\src\\components\\FondoParticulas.vue"],"sourcesContent":["<template>\r\n    <div ref=\"threeContainer\" class=\"three-container\"></div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, onMounted } from 'vue';\r\n  import * as THREE from 'three';\r\n  \r\n  export default {\r\n    name: 'FondoParticulas',\r\n    setup() {\r\n      const threeContainer = ref(null);\r\n      let scene;\r\n      let camera;\r\n      let renderer;\r\n  \r\n      onMounted(() => {\r\n        initThree();\r\n      });\r\n  \r\n      const initThree = () => {\r\n        // Crear escena\r\n        scene = new THREE.Scene();\r\n  \r\n        // Crear cámara\r\n        camera = new THREE.PerspectiveCamera(\r\n          75,\r\n          window.innerWidth / window.innerHeight,\r\n          0.1,\r\n          1000\r\n        );\r\n        camera.position.z = 5;\r\n  \r\n        // Crear renderizador\r\n        renderer = new THREE.WebGLRenderer();\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        if (threeContainer.value) {\r\n          threeContainer.value.appendChild(renderer.domElement);\r\n        }\r\n  \r\n        // Crear partículas\r\n        const particlesGeometry = new THREE.BufferGeometry();\r\n        const particlesCount = 10000;\r\n  \r\n        const posArray = new Float32Array(particlesCount * 3);\r\n        for (let i = 0; i < particlesCount * 3; i++) {\r\n          posArray[i] = (Math.random() - 0.5) * 10;\r\n        }\r\n  \r\n        particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));\r\n  \r\n        const particlesMaterial = new THREE.PointsMaterial({\r\n          size: 0.05,\r\n          color: 0x0000ff, // Color azul\r\n        });\r\n  \r\n        const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);\r\n        scene.add(particlesMesh);\r\n  \r\n        // Añadir animación\r\n        animate();\r\n  \r\n        // Ajustar el renderizador al cambiar el tamaño de la ventana\r\n        window.addEventListener('resize', onWindowResize, false);\r\n      };\r\n  \r\n      const animate = () => {\r\n        requestAnimationFrame(animate);\r\n  \r\n        renderer.render(scene, camera);\r\n      };\r\n  \r\n      const onWindowResize = () => {\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n      };\r\n  \r\n      return {\r\n        threeContainer,\r\n      };\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .three-container {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: -1;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;EACSA,GAAG,EAAC,gBAAgB;EAACC,KAAK,EAAC;;;uBAAhCC,mBAAA,CAAwD,OAAxDC,UAAwD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}