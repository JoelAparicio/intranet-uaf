{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-f85ef898\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container-fluid d-flex p-0\"\n};\nconst _hoisted_2 = {\n  class: \"main-content flex-grow-1 p-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FullCalendar = _resolveComponent(\"FullCalendar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_FullCalendar, {\n    options: _ctx.calendarOptions\n  }, {\n    eventContent: _withCtx(arg => [_createElementVNode(\"b\", null, _toDisplayString(arg.timeText), 1 /* TEXT */), _createElementVNode(\"i\", null, _toDisplayString(arg.event.title), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"options\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_FullCalendar","options","_ctx","calendarOptions","eventContent","_withCtx","arg","_toDisplayString","timeText","event","title","_"],"sources":["C:\\laragon\\www\\intranet-frontend\\src\\components\\Calendario_Birth.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid d-flex p-0\">\r\n    <div class=\"main-content flex-grow-1 p-3\">\r\n      <FullCalendar\r\n        :options=\"calendarOptions\"\r\n      >\r\n        <template v-slot:eventContent=\"arg\">\r\n          <b>{{ arg.timeText }}</b>\r\n          <i>{{ arg.event.title }}</i>\r\n        </template>\r\n      </FullCalendar>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport FullCalendar from '@fullcalendar/vue3'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport axios from 'axios'\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    FullCalendar,\r\n  },\r\n  data() {\r\n    return {\r\n      eventGuid: 0,\r\n      calendarOptions: {\r\n        plugins: [\r\n          dayGridPlugin,\r\n          timeGridPlugin,\r\n          interactionPlugin // needed for dateClick\r\n        ],\r\n        headerToolbar: {\r\n          left: 'prev,next today',\r\n          center: 'title',\r\n          right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n        },\r\n        initialView: 'dayGridMonth',\r\n        locale: 'es', // Cambiar el idioma a español\r\n        editable: true,\r\n        selectable: true,\r\n        selectMirror: true,\r\n        dayMaxEvents: true,\r\n        weekends: true,\r\n        select: this.handleDateSelect,\r\n        eventClick: this.handleEventClick,\r\n        eventsSet: this.handleEvents,\r\n        events: this.fetchEvents // Fetch events from API\r\n      },\r\n      currentEvents: [],\r\n    }\r\n  },\r\n  methods: {\r\n    handleWeekendsToggle() {\r\n      this.calendarOptions.weekends = !this.calendarOptions.weekends // update a property\r\n    },\r\n    handleDateSelect(selectInfo) {\r\n      let title = prompt('Please enter a new title for your event')\r\n      let calendarApi = selectInfo.view.calendar\r\n\r\n      calendarApi.unselect() // clear date selection\r\n\r\n      if (title) {\r\n        calendarApi.addEvent({\r\n          id: this.createEventId(),\r\n          title,\r\n          start: selectInfo.startStr,\r\n          end: selectInfo.endStr,\r\n          allDay: selectInfo.allDay\r\n        })\r\n      }\r\n    },\r\n    handleEventClick(clickInfo) {\r\n      if (confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\r\n        clickInfo.event.remove()\r\n      }\r\n    },\r\n    handleEvents(events) {\r\n      this.currentEvents = events\r\n    },\r\n    fetchEvents(fetchInfo, successCallback, failureCallback) {\r\n      axios.get('http://localhost:8000/api/birthdays')\r\n        .then(response => {\r\n          const events = response.data.map(event => ({\r\n            id: event.id,\r\n            title: event.usuario,\r\n            start: event.fecha_birthday,\r\n            allDay: true\r\n          }));\r\n          successCallback(events);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching events:', error);\r\n          failureCallback(error);\r\n        });\r\n    },\r\n    createEventId() {\r\n      return String(this.eventGuid++)\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.container-fluid {\r\n  height: 100vh;\r\n  display: flex;\r\n}\r\n\r\n.main-content {\r\n  flex-grow: 1;\r\n}\r\n\r\nh5 {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\nul {\r\n  padding-left: 0;\r\n}\r\n\r\nli {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\nb {\r\n  margin-right: 5px;\r\n}\r\n\r\n.fc {\r\n  max-width: 100%;\r\n  height: calc(100vh - 120px); /* Ajustar el tamaño del calendario */\r\n  overflow: auto;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAA4B;;EAChCA,KAAK,EAAC;AAA8B;;;uBAD3CC,mBAAA,CAWM,OAXNC,UAWM,GAVJC,mBAAA,CASM,OATNC,UASM,GARJC,YAAA,CAOeC,uBAAA;IANZC,OAAO,EAAEC,IAAA,CAAAC;EAAe;IAERC,YAAY,EAAAC,QAAA,CACFC,GADO,KAChCT,mBAAA,CAAyB,WAAAU,gBAAA,CAAnBD,GAAG,CAACE,QAAQ,kBAClBX,mBAAA,CAA4B,WAAAU,gBAAA,CAAtBD,GAAG,CAACG,KAAK,CAACC,KAAK,iB;IAR/BC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}