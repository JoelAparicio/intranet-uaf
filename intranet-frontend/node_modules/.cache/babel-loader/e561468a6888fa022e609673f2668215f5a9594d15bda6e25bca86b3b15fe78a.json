{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nexport default {\n  name: 'Roles',\n  data() {\n    return {\n      roles: [],\n      users: [],\n      currentPage: 1,\n      rolesPerPage: 6,\n      showModal: false,\n      showAssignModal: false,\n      showDeleteModal: false,\n      showUsersModalFlag: false,\n      newRole: '',\n      userSearchQuery: '',\n      selectedUser: null,\n      selectedRole: null,\n      selectedRoleToDelete: ''\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.roles.length / this.rolesPerPage);\n    },\n    paginatedRoles() {\n      const start = (this.currentPage - 1) * this.rolesPerPage;\n      const end = start + this.rolesPerPage;\n      return this.roles.slice(start, end);\n    },\n    filteredUsers() {\n      if (!this.userSearchQuery) {\n        return [];\n      }\n      const query = this.userSearchQuery.toLowerCase();\n      return this.users.filter(user => user.correo_electronico.toLowerCase().includes(query));\n    }\n  },\n  methods: {\n    async listar_roles() {\n      try {\n        const rolesResponse = await axios.get('http://localhost:8000/api/roles');\n        const usersResponse = await axios.get('http://localhost:8000/api/directorio_usuarios');\n        this.roles = rolesResponse.data;\n        this.users = Array.isArray(usersResponse.data.data) ? usersResponse.data.data : [];\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    },\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    getIcon(roleName) {\n      const lowerRoleName = roleName.toLowerCase();\n      if (lowerRoleName.includes('jefe') || lowerRoleName.includes('director') || lowerRoleName.includes('subdirector')) {\n        return ['fas', 'user-tie'];\n      } else if (lowerRoleName.includes('administrador')) {\n        return ['fas', 'user-secret'];\n      } else {\n        return ['fas', 'user'];\n      }\n    },\n    showAddRoleModal() {\n      this.showModal = true;\n    },\n    hideAddRoleModal() {\n      this.showModal = false;\n    },\n    async createRole() {\n      try {\n        const response = await axios.post('http://localhost:8000/api/agregar_roles', {\n          name: this.newRole\n        });\n        this.roles.push(response.data.data);\n        this.hideAddRoleModal();\n        this.newRole = '';\n        Swal.fire({\n          icon: 'success',\n          title: 'Rol creado',\n          text: 'El rol ha sido creado correctamente',\n          timer: 1000,\n          showConfirmButton: false\n        });\n        this.listar_roles(); // Refrescar la lista de roles\n      } catch (error) {\n        console.error('Error creating role:', error);\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: 'Hubo un error al crear el rol',\n          timer: 2000,\n          showConfirmButton: false\n        });\n      }\n    },\n    showAssignUserModal(role) {\n      this.selectedRole = role;\n      this.showAssignModal = true;\n    },\n    hideAssignUserModal() {\n      this.showAssignModal = false;\n      this.selectedUser = null;\n      this.userSearchQuery = '';\n    },\n    updateSearchResults() {\n      this.selectedUser = null; // Limpiar usuario seleccionado si se cambia la búsqueda\n    },\n    selectUser(user) {\n      this.selectedUser = user;\n      this.userSearchQuery = user.correo_electronico; // Mostrar solo el correo electrónico en el campo de búsqueda\n    },\n    clearSelectedUser() {\n      this.selectedUser = null;\n      this.userSearchQuery = '';\n    },\n    async confirmAssignRoleToUser() {\n      if (!this.selectedUser) {\n        console.error('No user selected');\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: 'No se ha seleccionado ningún usuario',\n          timer: 2000,\n          showConfirmButton: false\n        });\n        return;\n      }\n      this.assignRoleToUser();\n    },\n    async assignRoleToUser() {\n      try {\n        await axios.post('http://localhost:8000/api/asignar_rol', {\n          user_id: this.selectedUser.id,\n          role: this.selectedRole.name\n        });\n        this.hideAssignUserModal();\n        this.selectedUser = null;\n        this.userSearchQuery = '';\n        Swal.fire({\n          icon: 'success',\n          title: 'Rol asignado',\n          text: 'El rol ha sido asignado correctamente',\n          timer: 1000,\n          showConfirmButton: false\n        });\n        this.listar_roles(); // Refrescar la lista de roles\n      } catch (error) {\n        if (error.response && error.response.status === 422) {\n          Swal.fire({\n            icon: 'error',\n            title: 'Error',\n            text: 'No se ha seleccionado ningún usuario',\n            timer: 2000,\n            showConfirmButton: false\n          });\n        } else {\n          console.error('Error assigning role to user:', error);\n          Swal.fire({\n            icon: 'error',\n            title: 'Error',\n            text: 'Hubo un error al asignar el rol',\n            timer: 2000,\n            showConfirmButton: false\n          });\n        }\n      }\n    },\n    showDeleteRoleModal() {\n      this.showDeleteModal = true;\n    },\n    hideDeleteRoleModal() {\n      this.showDeleteModal = false;\n    },\n    async confirmDeleteRole() {\n      const roleToDelete = this.roles.find(role => role.name === this.selectedRoleToDelete);\n      if (roleToDelete && roleToDelete.usuarios_count > 0) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: 'No se puede eliminar un rol con usuarios asignados',\n          timer: 2000,\n          showConfirmButton: false\n        });\n        return;\n      }\n      Swal.fire({\n        title: '¿Estás seguro?',\n        text: \"¡No podrás revertir esto!\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Sí, eliminar',\n        cancelButtonText: 'Cancelar'\n      }).then(result => {\n        if (result.isConfirmed) {\n          this.deleteRole();\n        }\n      });\n    },\n    async deleteRole() {\n      try {\n        await axios.put(`http://localhost:8000/api/eliminar_rol/${this.selectedRoleToDelete}`);\n        this.roles = this.roles.filter(role => role.name !== this.selectedRoleToDelete);\n        this.hideDeleteRoleModal();\n        this.selectedRoleToDelete = '';\n        Swal.fire({\n          icon: 'success',\n          title: 'Rol eliminado',\n          text: 'El rol ha sido eliminado correctamente',\n          showConfirmButton: true\n        });\n        this.listar_roles(); // Refrescar la lista de roles\n      } catch (error) {\n        console.error('Error deleting role:', error);\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: 'Hubo un error al eliminar el rol',\n          timer: 2000,\n          showConfirmButton: false\n        });\n      }\n    },\n    showUsersModal(role) {\n      this.selectedRole = role;\n      this.showUsersModalFlag = true;\n    },\n    hideUsersModal() {\n      this.showUsersModalFlag = false;\n    },\n    async unassignUserFromRole(user, role) {\n      try {\n        await axios.post('http://localhost:8000/api/desasignar_rol', {\n          user_id: user.id,\n          role: role.name\n        });\n        Swal.fire({\n          icon: 'success',\n          title: 'Usuario desasignado',\n          text: 'El usuario ha sido desasignado del rol correctamente',\n          timer: 1000,\n          showConfirmButton: false\n        });\n        this.listar_roles(); // Refrescar la lista de roles\n      } catch (error) {\n        console.error('Error unassigning user from role:', error);\n        Swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: 'Hubo un error al desasignar el usuario del rol',\n          timer: 2000,\n          showConfirmButton: false\n        });\n      }\n    }\n  },\n  mounted() {\n    this.listar_roles();\n  }\n};","map":{"version":3,"names":["axios","Swal","name","data","roles","users","currentPage","rolesPerPage","showModal","showAssignModal","showDeleteModal","showUsersModalFlag","newRole","userSearchQuery","selectedUser","selectedRole","selectedRoleToDelete","computed","totalPages","Math","ceil","length","paginatedRoles","start","end","slice","filteredUsers","query","toLowerCase","filter","user","correo_electronico","includes","methods","listar_roles","rolesResponse","get","usersResponse","Array","isArray","error","console","changePage","page","nextPage","previousPage","getIcon","roleName","lowerRoleName","showAddRoleModal","hideAddRoleModal","createRole","response","post","push","fire","icon","title","text","timer","showConfirmButton","showAssignUserModal","role","hideAssignUserModal","updateSearchResults","selectUser","clearSelectedUser","confirmAssignRoleToUser","assignRoleToUser","user_id","id","status","showDeleteRoleModal","hideDeleteRoleModal","confirmDeleteRole","roleToDelete","find","usuarios_count","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","deleteRole","put","showUsersModal","hideUsersModal","unassignUserFromRole","mounted"],"sources":["C:\\laragon\\www\\intranet-frontend\\src\\components\\Roles.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-4\">\r\n    <div class=\"card shadow-sm no-animation mb-4\">\r\n      <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n        <div>\r\n          <h2>Administración de Roles</h2>\r\n        </div>\r\n        <div>\r\n          <button class=\"btn btn-add-role me-2\" @click=\"showAddRoleModal\">Agregar rol</button>\r\n          <button class=\"btn btn-add-role btn-delete-role\" @click=\"showDeleteRoleModal\">Eliminar rol</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"row roles-container\">\r\n          <div\r\n            v-for=\"(role, index) in paginatedRoles\"\r\n            :key=\"index\"\r\n            class=\"col-md-4 mb-4\"\r\n          >\r\n            <div class=\"card h-100 shadow-sm role-card with-animation\">\r\n              <div class=\"card-body position-relative\">\r\n                <h5 class=\"card-title position-absolute top-0 start-0 m-3\">{{ role.name }}</h5>\r\n                <a href=\"#\" class=\"edit-link position-absolute bottom-0 start-0 m-3\" @click=\"showAssignUserModal(role)\">Agregar usuario</a>\r\n                <a href=\"#\" class=\"view-link position-absolute bottom-0 start-0 m-3\" @click=\"showUsersModal(role)\">Ver usuarios</a>\r\n                <div class=\"position-absolute bottom-0 end-0 m-3 d-flex align-items-center\">\r\n                  <a><p class=\"text-end text-muted mb-0\">{{ role.usuarios_count }} usuarios</p>&#160;\r\n                  <font-awesome-icon :icon=\"getIcon(role.name)\" class=\"me-2\"></font-awesome-icon></a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <nav aria-label=\"Page navigation\" class=\"mt-4\">\r\n          <ul class=\"pagination justify-content-center\">\r\n            <li v-if=\"totalPages > 10\" class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\r\n              <a class=\"page-link\" href=\"#\" @click.prevent=\"previousPage\">«</a>\r\n            </li>\r\n            <li v-for=\"page in totalPages\" :key=\"page\" class=\"page-item\" :class=\"{ active: currentPage === page }\">\r\n              <a class=\"page-link\" href=\"#\" @click.prevent=\"changePage(page)\">{{ page }}</a>\r\n            </li>\r\n            <li v-if=\"totalPages > 10\" class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\r\n              <a class=\"page-link\" href=\"#\" @click.prevent=\"nextPage\">»</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal para agregar rol -->\r\n    <div v-if=\"showModal\" class=\"modal fade show d-block\" tabindex=\"-1\" role=\"dialog\" style=\"background: rgba(0,0,0,0.5)\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Agregar nuevo rol</h5>\r\n            <button type=\"button\" class=\"btn-close\" @click=\"hideAddRoleModal\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"newRole\" placeholder=\"Nombre del nuevo rol\">\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"hideAddRoleModal\">Cerrar</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"createRole\">Guardar</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal para asignar usuario a rol -->\r\n    <div v-if=\"showAssignModal\" class=\"modal fade show d-block\" tabindex=\"-1\" role=\"dialog\" style=\"background: rgba(0,0,0,0.5)\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Asignar usuario a rol</h5>\r\n            <button type=\"button\" class=\"btn-close\" @click=\"hideAssignUserModal\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <input type=\"text\" class=\"form-control mb-3\" v-model=\"userSearchQuery\" @input=\"updateSearchResults\" placeholder=\"Buscar usuario por correo electrónico\">\r\n            <ul class=\"list-group\" v-if=\"!selectedUser\">\r\n              <li v-for=\"user in filteredUsers\" :key=\"user.correo_electronico\" class=\"list-group-item\" @click=\"selectUser(user)\">\r\n                {{ user.correo_electronico }}\r\n              </li>\r\n            </ul>\r\n            <div v-if=\"selectedUser\" class=\"alert alert-info\">\r\n              Usuario seleccionado: {{ selectedUser.correo_electronico }}\r\n              <button type=\"button\" class=\"btn btn-sm btn-danger float-end\" @click=\"clearSelectedUser\">Quitar</button>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"hideAssignUserModal\">Cerrar</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"confirmAssignRoleToUser\">Asignar</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal para ver usuarios asignados a un rol -->\r\n    <div v-if=\"showUsersModalFlag\" class=\"modal fade show d-block\" tabindex=\"-1\" role=\"dialog\" style=\"background: rgba(0,0,0,0.5)\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Usuarios asignados al rol {{ selectedRole.name }}</h5>\r\n            <button type=\"button\" class=\"btn-close\" @click=\"hideUsersModal\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <table class=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Correo</th>\r\n                  <th>Acción</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"user in selectedRole.usuarios\" :key=\"user.id\">\r\n                  <td>{{ user.correo_electronico }}</td>\r\n                  <td>\r\n                    <font-awesome-icon :icon=\"['fas', 'ban']\" class=\"fa-lg text-danger\" @click=\"unassignUserFromRole(user, selectedRole)\"/>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"hideUsersModal\">Cerrar</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal para eliminar rol -->\r\n    <div v-if=\"showDeleteModal\" class=\"modal fade show d-block\" tabindex=\"-1\" role=\"dialog\" style=\"background: rgba(0,0,0,0.5)\">\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\">Eliminar rol</h5>\r\n            <button type=\"button\" class=\"btn-close\" @click=\"hideDeleteRoleModal\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <select class=\"form-control\" v-model=\"selectedRoleToDelete\">\r\n              <option disabled value=\"\">Seleccione un rol a eliminar</option>\r\n              <option v-for=\"role in roles\" :key=\"role.name\" :value=\"role.name\">{{ role.name }}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"hideDeleteRoleModal\">Cerrar</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"confirmDeleteRole\">Eliminar</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default {\r\n  name: 'Roles',\r\n  data() {\r\n    return {\r\n      roles: [],\r\n      users: [],\r\n      currentPage: 1,\r\n      rolesPerPage: 6,\r\n      showModal: false,\r\n      showAssignModal: false,\r\n      showDeleteModal: false,\r\n      showUsersModalFlag: false,\r\n      newRole: '',\r\n      userSearchQuery: '',\r\n      selectedUser: null,\r\n      selectedRole: null,\r\n      selectedRoleToDelete: '',\r\n    };\r\n  },\r\n  computed: {\r\n    totalPages() {\r\n      return Math.ceil(this.roles.length / this.rolesPerPage);\r\n    },\r\n    paginatedRoles() {\r\n      const start = (this.currentPage - 1) * this.rolesPerPage;\r\n      const end = start + this.rolesPerPage;\r\n      return this.roles.slice(start, end);\r\n    },\r\n    filteredUsers() {\r\n      if (!this.userSearchQuery) {\r\n        return [];\r\n      }\r\n      const query = this.userSearchQuery.toLowerCase();\r\n      return this.users.filter(user => \r\n        user.correo_electronico.toLowerCase().includes(query)\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    async listar_roles() {\r\n      try {\r\n        const rolesResponse = await axios.get('http://localhost:8000/api/roles');\r\n        const usersResponse = await axios.get('http://localhost:8000/api/directorio_usuarios');\r\n        this.roles = rolesResponse.data;\r\n        this.users = Array.isArray(usersResponse.data.data) ? usersResponse.data.data : [];\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    },\r\n    changePage(page) {\r\n      if (page >= 1 && page <= this.totalPages) {\r\n        this.currentPage = page;\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    previousPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    getIcon(roleName) {\r\n      const lowerRoleName = roleName.toLowerCase();\r\n      if (lowerRoleName.includes('jefe') || lowerRoleName.includes('director') || lowerRoleName.includes('subdirector')) {\r\n        return ['fas', 'user-tie'];\r\n      } else if (lowerRoleName.includes('administrador')) {\r\n        return ['fas', 'user-secret'];\r\n      } else {\r\n        return ['fas', 'user'];\r\n      }\r\n    },\r\n    showAddRoleModal() {\r\n      this.showModal = true;\r\n    },\r\n    hideAddRoleModal() {\r\n      this.showModal = false;\r\n    },\r\n    async createRole() {\r\n      try {\r\n        const response = await axios.post('http://localhost:8000/api/agregar_roles', { name: this.newRole });\r\n        this.roles.push(response.data.data);\r\n        this.hideAddRoleModal();\r\n        this.newRole = '';\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Rol creado',\r\n          text: 'El rol ha sido creado correctamente',\r\n          timer: 1000,\r\n          showConfirmButton: false\r\n        });\r\n        this.listar_roles(); // Refrescar la lista de roles\r\n      } catch (error) {\r\n        console.error('Error creating role:', error);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: 'Hubo un error al crear el rol',\r\n          timer: 2000,\r\n          showConfirmButton: false\r\n        });\r\n      }\r\n    },\r\n    showAssignUserModal(role) {\r\n      this.selectedRole = role;\r\n      this.showAssignModal = true;\r\n    },\r\n    hideAssignUserModal() {\r\n      this.showAssignModal = false;\r\n      this.selectedUser = null;\r\n      this.userSearchQuery = '';\r\n    },\r\n    updateSearchResults() {\r\n      this.selectedUser = null; // Limpiar usuario seleccionado si se cambia la búsqueda\r\n    },\r\n    selectUser(user) {\r\n      this.selectedUser = user;\r\n      this.userSearchQuery = user.correo_electronico; // Mostrar solo el correo electrónico en el campo de búsqueda\r\n    },\r\n    clearSelectedUser() {\r\n      this.selectedUser = null;\r\n      this.userSearchQuery = '';\r\n    },\r\n    async confirmAssignRoleToUser() {\r\n      if (!this.selectedUser) {\r\n        console.error('No user selected');\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: 'No se ha seleccionado ningún usuario',\r\n          timer: 2000,\r\n          showConfirmButton: false\r\n        });\r\n        return;\r\n      }\r\n      this.assignRoleToUser();\r\n    },\r\n    async assignRoleToUser() {\r\n      try {\r\n        await axios.post('http://localhost:8000/api/asignar_rol', { user_id: this.selectedUser.id, role: this.selectedRole.name });\r\n        this.hideAssignUserModal();\r\n        this.selectedUser = null;\r\n        this.userSearchQuery = '';\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Rol asignado',\r\n          text: 'El rol ha sido asignado correctamente',\r\n          timer: 1000,\r\n          showConfirmButton: false\r\n        });\r\n        this.listar_roles(); // Refrescar la lista de roles\r\n      } catch (error) {\r\n        if (error.response && error.response.status === 422) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'No se ha seleccionado ningún usuario',\r\n            timer: 2000,\r\n            showConfirmButton: false\r\n          });\r\n        } else {\r\n          console.error('Error assigning role to user:', error);\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'Hubo un error al asignar el rol',\r\n            timer: 2000,\r\n            showConfirmButton: false\r\n          });\r\n        }\r\n      }\r\n    },\r\n    showDeleteRoleModal() {\r\n      this.showDeleteModal = true;\r\n    },\r\n    hideDeleteRoleModal() {\r\n      this.showDeleteModal = false;\r\n    },\r\n    async confirmDeleteRole() {\r\n      const roleToDelete = this.roles.find(role => role.name === this.selectedRoleToDelete);\r\n      if (roleToDelete && roleToDelete.usuarios_count > 0) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: 'No se puede eliminar un rol con usuarios asignados',\r\n          timer: 2000,\r\n          showConfirmButton: false\r\n        });\r\n        return;\r\n      }\r\n\r\n      Swal.fire({\r\n        title: '¿Estás seguro?',\r\n        text: \"¡No podrás revertir esto!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Sí, eliminar',\r\n        cancelButtonText: 'Cancelar'\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          this.deleteRole();\r\n        }\r\n      });\r\n    },\r\n    async deleteRole() {\r\n      try {\r\n        await axios.put(`http://localhost:8000/api/eliminar_rol/${this.selectedRoleToDelete}`);\r\n        this.roles = this.roles.filter(role => role.name !== this.selectedRoleToDelete);\r\n        this.hideDeleteRoleModal();\r\n        this.selectedRoleToDelete = '';\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Rol eliminado',\r\n          text: 'El rol ha sido eliminado correctamente',\r\n          showConfirmButton: true\r\n        });\r\n        this.listar_roles(); // Refrescar la lista de roles\r\n      } catch (error) {\r\n        console.error('Error deleting role:', error);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: 'Hubo un error al eliminar el rol',\r\n          timer: 2000,\r\n          showConfirmButton: false\r\n        });\r\n      }\r\n    },\r\n    showUsersModal(role) {\r\n      this.selectedRole = role;\r\n      this.showUsersModalFlag = true;\r\n    },\r\n    hideUsersModal() {\r\n      this.showUsersModalFlag = false;\r\n    },\r\n    async unassignUserFromRole(user, role) {\r\n      try {\r\n        await axios.post('http://localhost:8000/api/desasignar_rol', { user_id: user.id, role: role.name });\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Usuario desasignado',\r\n          text: 'El usuario ha sido desasignado del rol correctamente',\r\n          timer: 1000,\r\n          showConfirmButton: false\r\n        });\r\n        this.listar_roles(); // Refrescar la lista de roles\r\n      } catch (error) {\r\n        console.error('Error unassigning user from role:', error);\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: 'Hubo un error al desasignar el usuario del rol',\r\n          timer: 2000,\r\n          showConfirmButton: false\r\n        });\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.listar_roles();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.roles-container {\r\n  min-height: 400px; /* Ajusta esta altura según sea necesario */\r\n}\r\n.card.no-animation {\r\n  border: 1px solid #ddd; /* Borde gris claro */\r\n  border-radius: 0.5rem; /* Bordes redondeados */\r\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075); /* Sombra suave */\r\n}\r\n.card.with-animation {\r\n  border: 1px solid #ddd; /* Borde gris claro */\r\n  border-radius: 0.5rem; /* Bordes redondeados */\r\n  transition: transform 0.3s, box-shadow 0.3s;\r\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075); /* Sombra suave */\r\n}\r\n.card.with-animation:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15); /* Sombra más pronunciada */\r\n}\r\n.card-body {\r\n  padding: 1.25rem;\r\n  position: relative;\r\n}\r\n.card-header {\r\n  background-color: #f8f9fa; /* Fondo claro */\r\n  border-bottom: 1px solid #ddd; /* Línea separadora */\r\n  padding: 1rem 1.25rem;\r\n}\r\n.edit-link {\r\n  color: #007bff;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n  transition: color 0.2s;\r\n}\r\n.edit-link:hover {\r\n  color: #0056b3;\r\n  text-decoration: underline;\r\n}\r\n.view-link {\r\n  color: #007bff;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n  transition: color 0.2s;\r\n  margin-left: 60px;\r\n}\r\n.view-link:hover {\r\n  color: #0056b3;\r\n  text-decoration: underline;\r\n}\r\n.pagination {\r\n  margin-top: 20px;\r\n}\r\n.pagination .page-item {\r\n  margin: 0 5px; /* Espaciado entre botones */\r\n}\r\n.pagination .page-item .page-link {\r\n  color: #007bff;\r\n  border-radius: 25%; /* Redondear los botones */\r\n  transition: background-color 0.3s, color 0.3s; /* Transiciones suaves */\r\n  outline: none; /* Eliminar el resaltado */\r\n}\r\n.pagination .page-item.active .page-link {\r\n  background-color: #0056b3; /* Color de fondo para el botón activo */\r\n  border-color: #0056b3; /* Color de borde para el botón activo */\r\n  color: white; /* Color de texto para el botón activo */\r\n  box-shadow: none; /* Eliminar la sombra */\r\n}\r\n.pagination .page-item .page-link:hover {\r\n  background-color: #e9ecef; /* Color de fondo al pasar el mouse */\r\n  color: #0056b3; /* Color de texto al pasar el mouse */\r\n}\r\n\r\n/* Estilos del botón \"Agregar rol\" */\r\n.btn-add-role {\r\n  background-color: #007bff;\r\n  border: none;\r\n  color: white;\r\n  padding: 0.5rem 1rem;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  border-radius: 0.5rem;\r\n  transition: background-color 0.3s, transform 0.3s, box-shadow 0.3s, color 0.3s;\r\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075); /* Sombra suave */\r\n}\r\n.btn-add-role:hover {\r\n  background-color: #0056b3;\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15); /* Sombra más pronunciada */\r\n  color: #fff; /* Cambio de color del texto */\r\n}\r\n.btn-add-role:focus {\r\n  outline: none;\r\n}\r\n\r\n/* Estilos del botón \"Eliminar rol\" */\r\n.btn-delete-role {\r\n  background-color: #dc3545;\r\n}\r\n.btn-delete-role:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n/* Estilos de la lista de sugerencias */\r\n.list-group-item {\r\n  cursor: pointer;\r\n}\r\n\r\n.list-group-item:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n/* Estilos de la alerta de usuario seleccionado */\r\n.alert-info {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}