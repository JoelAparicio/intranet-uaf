{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport store from '../store/index';\nimport Login from '../views/Login.vue';\nimport Home from '../views/Home.vue';\nimport Register from '../views/Register.vue';\nimport NoAcceso from '../views/NoAcceso.vue';\nconst routes = [{\n  path: '/',\n  name: 'inicio',\n  component: Login\n}, {\n  path: '/login',\n  name: 'login',\n  component: Login\n}, {\n  path: '/home',\n  name: 'home',\n  component: Home,\n  meta: {\n    requiresAuth: true\n  } // Añadimos el meta campo para la autenticación\n}, {\n  path: '/register',\n  name: 'register',\n  component: Register\n}, {\n  path: '/no-acceso',\n  // Corregido el nombre de la ruta\n  name: 'no-acceso',\n  component: NoAcceso\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// Guard de navegación global\nrouter.beforeEach((to, from, next) => {\n  // Si la ruta requiere autenticación y el usuario no está autenticado\n  if (to.matched.some(record => record.meta.requiresAuth) && !store.getters.isAuthenticated) {\n    // Redirigir a la página de inicio de sesión\n    next({\n      name: 'no'\n    });\n  } else {\n    // De lo contrario, continuar navegando\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","store","Login","Home","Register","NoAcceso","routes","path","name","component","meta","requiresAuth","router","history","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","getters","isAuthenticated"],"sources":["C:/laragon/www/intranet-frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport store from '../store/index';\nimport Login from '../views/Login.vue';\nimport Home from '../views/Home.vue';\nimport Register from '../views/Register.vue';\nimport NoAcceso from '../views/NoAcceso.vue';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'inicio',\n    component: Login\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: Login\n  },\n  {\n    path: '/home',\n    name: 'home',\n    component: Home,\n    meta: { requiresAuth: true } // Añadimos el meta campo para la autenticación\n  },\n  {\n    path: '/register',\n    name: 'register',\n    component: Register\n  },\n  {\n    path: '/no-acceso', // Corregido el nombre de la ruta\n    name: 'no-acceso',\n    component: NoAcceso\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\n// Guard de navegación global\nrouter.beforeEach((to, from, next) => {\n  // Si la ruta requiere autenticación y el usuario no está autenticado\n  if (to.matched.some(record => record.meta.requiresAuth) && !store.getters.isAuthenticated) {\n    // Redirigir a la página de inicio de sesión\n    next({ name: 'no' });\n  } else {\n    // De lo contrario, continuar navegando\n    next();\n  }\n});\n\nexport default router\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAE5C,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEP;AACb,CAAC,EACD;EACEK,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEP;AACb,CAAC,EACD;EACEK,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEN,IAAI;EACfO,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAC;AAC/B,CAAC,EACD;EACEJ,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEL;AACb,CAAC,EACD;EACEG,IAAI,EAAE,YAAY;EAAE;EACpBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEJ;AACb,CAAC,CACF;AAED,MAAMO,MAAM,GAAGb,YAAY,CAAC;EAC1Bc,OAAO,EAAEb,gBAAgB,CAACc,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CV;AACF,CAAC,CAAC;;AAEF;AACAM,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC;EACA,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACb,IAAI,CAACC,YAAY,CAAC,IAAI,CAACV,KAAK,CAACuB,OAAO,CAACC,eAAe,EAAE;IACzF;IACAL,IAAI,CAAC;MAAEZ,IAAI,EAAE;IAAK,CAAC,CAAC;EACtB,CAAC,MAAM;IACL;IACAY,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}