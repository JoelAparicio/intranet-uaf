{"ast":null,"code":"import Datos_Usuario from '@/components/Datos_Usuario.vue';\nimport Solicitudes from '@/components/Solicitudes.vue';\nimport Historial_Solicitudes from '@/components/Historial_Solicitudes.vue';\nimport axios from 'axios';\nexport default {\n  name: 'MiEspacio',\n  components: {\n    Solicitudes,\n    Datos_Usuario,\n    Historial_Solicitudes\n  },\n  data() {\n    return {\n      sharedTiposSolicitudes: []\n    };\n  },\n  async created() {\n    // OPTIMIZACIÓN 1: Cargar datos en paralelo\n    await this.loadDataOptimized();\n  },\n  methods: {\n    async loadDataOptimized() {\n      try {\n        const token = localStorage.getItem('auth_token');\n\n        // OPTIMIZACIÓN 2: Una sola llamada a listar_solicitud para ambos componentes\n        const tiposSolicitudesPromise = axios.get('listar_solicitud', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        // OPTIMIZACIÓN 3: Ejecutar todas las llamadas en paralelo\n        const [tiposSolicitudesResponse] = await Promise.all([tiposSolicitudesPromise\n        // Los otros componentes manejan sus propias llamadas, pero ahora pueden usar datos compartidos\n        ]);\n\n        // Compartir datos entre componentes\n        this.sharedTiposSolicitudes = tiposSolicitudesResponse.data;\n\n        // Notificar a los componentes que ya tienen los datos disponibles\n        this.$nextTick(() => {\n          if (this.$refs.solicitudes && this.$refs.solicitudes.setSolicitudes) {\n            this.$refs.solicitudes.setSolicitudes(this.sharedTiposSolicitudes);\n          }\n          if (this.$refs.historial && this.$refs.historial.setTiposSolicitudes) {\n            this.$refs.historial.setTiposSolicitudes(this.sharedTiposSolicitudes);\n          }\n        });\n      } catch (error) {\n        console.error('Error al cargar datos compartidos:', error);\n        // Los componentes individuales manejarán sus propios errores como fallback\n      }\n    }\n  }\n};","map":{"version":3,"names":["Datos_Usuario","Solicitudes","Historial_Solicitudes","axios","name","components","data","sharedTiposSolicitudes","created","loadDataOptimized","methods","token","localStorage","getItem","tiposSolicitudesPromise","get","headers","tiposSolicitudesResponse","Promise","all","$nextTick","$refs","solicitudes","setSolicitudes","historial","setTiposSolicitudes","error","console"],"sources":["C:\\xampp\\htdocs\\intranet\\intranet-frontend\\src\\views\\MiEspacio.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid d-flex justify-content-center align-items-center\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <Datos_Usuario ref=\"datosUsuario\" />\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <Solicitudes ref=\"solicitudes\" :tiposSolicitudes=\"sharedTiposSolicitudes\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <Historial_Solicitudes ref=\"historial\" :tiposSolicitudes=\"sharedTiposSolicitudes\" />\r\n</template>\r\n\r\n<script>\r\nimport Datos_Usuario from '@/components/Datos_Usuario.vue'\r\nimport Solicitudes from '@/components/Solicitudes.vue'\r\nimport Historial_Solicitudes from '@/components/Historial_Solicitudes.vue'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'MiEspacio',\r\n  components: {\r\n    Solicitudes,\r\n    Datos_Usuario,\r\n    Historial_Solicitudes\r\n  },\r\n  data() {\r\n    return {\r\n      sharedTiposSolicitudes: []\r\n    }\r\n  },\r\n  async created() {\r\n    // OPTIMIZACIÓN 1: Cargar datos en paralelo\r\n    await this.loadDataOptimized()\r\n  },\r\n  methods: {\r\n    async loadDataOptimized() {\r\n      try {\r\n        const token = localStorage.getItem('auth_token')\r\n\r\n        // OPTIMIZACIÓN 2: Una sola llamada a listar_solicitud para ambos componentes\r\n        const tiposSolicitudesPromise = axios.get('listar_solicitud', {\r\n          headers: { 'Authorization': `Bearer ${token}` }\r\n        })\r\n\r\n        // OPTIMIZACIÓN 3: Ejecutar todas las llamadas en paralelo\r\n        const [tiposSolicitudesResponse] = await Promise.all([\r\n          tiposSolicitudesPromise,\r\n          // Los otros componentes manejan sus propias llamadas, pero ahora pueden usar datos compartidos\r\n        ])\r\n\r\n        // Compartir datos entre componentes\r\n        this.sharedTiposSolicitudes = tiposSolicitudesResponse.data\r\n\r\n        // Notificar a los componentes que ya tienen los datos disponibles\r\n        this.$nextTick(() => {\r\n          if (this.$refs.solicitudes && this.$refs.solicitudes.setSolicitudes) {\r\n            this.$refs.solicitudes.setSolicitudes(this.sharedTiposSolicitudes)\r\n          }\r\n          if (this.$refs.historial && this.$refs.historial.setTiposSolicitudes) {\r\n            this.$refs.historial.setTiposSolicitudes(this.sharedTiposSolicitudes)\r\n          }\r\n        })\r\n\r\n      } catch (error) {\r\n        console.error('Error al cargar datos compartidos:', error)\r\n        // Los componentes individuales manejarán sus propios errores como fallback\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  margin-top: 3em;\r\n}\r\n</style>"],"mappings":"AAeA,OAAOA,aAAY,MAAO,gCAA+B;AACzD,OAAOC,WAAU,MAAO,8BAA6B;AACrD,OAAOC,qBAAoB,MAAO,wCAAuC;AACzE,OAAOC,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVJ,WAAW;IACXD,aAAa;IACbE;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,sBAAsB,EAAE;IAC1B;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd;IACA,MAAM,IAAI,CAACC,iBAAiB,CAAC;EAC/B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAME,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,YAAY;;QAE/C;QACA,MAAMC,uBAAsB,GAAIX,KAAK,CAACY,GAAG,CAAC,kBAAkB,EAAE;UAC5DC,OAAO,EAAE;YAAE,eAAe,EAAG,UAASL,KAAM;UAAE;QAChD,CAAC;;QAED;QACA,MAAM,CAACM,wBAAwB,IAAI,MAAMC,OAAO,CAACC,GAAG,CAAC,CACnDL;QACA;QAAA,CACD;;QAED;QACA,IAAI,CAACP,sBAAqB,GAAIU,wBAAwB,CAACX,IAAG;;QAE1D;QACA,IAAI,CAACc,SAAS,CAAC,MAAM;UACnB,IAAI,IAAI,CAACC,KAAK,CAACC,WAAU,IAAK,IAAI,CAACD,KAAK,CAACC,WAAW,CAACC,cAAc,EAAE;YACnE,IAAI,CAACF,KAAK,CAACC,WAAW,CAACC,cAAc,CAAC,IAAI,CAAChB,sBAAsB;UACnE;UACA,IAAI,IAAI,CAACc,KAAK,CAACG,SAAQ,IAAK,IAAI,CAACH,KAAK,CAACG,SAAS,CAACC,mBAAmB,EAAE;YACpE,IAAI,CAACJ,KAAK,CAACG,SAAS,CAACC,mBAAmB,CAAC,IAAI,CAAClB,sBAAsB;UACtE;QACF,CAAC;MAEH,EAAE,OAAOmB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK;QACzD;MACF;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}