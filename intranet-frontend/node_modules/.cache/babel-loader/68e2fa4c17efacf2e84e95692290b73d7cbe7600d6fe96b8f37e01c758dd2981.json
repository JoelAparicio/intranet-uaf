{"ast":null,"code":"import \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport * as THREE from 'three';\nexport default {\n  name: 'FondoParticulas',\n  mounted() {\n    this.initThree();\n  },\n  methods: {\n    initThree() {\n      // Crear escena\n      this.scene = new THREE.Scene();\n\n      // Crear cámara\n      this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      this.camera.position.z = 5;\n\n      // Crear renderizador\n      this.renderer = new THREE.WebGLRenderer();\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      this.$refs.threeContainer.appendChild(this.renderer.domElement);\n\n      // Crear partículas\n      const particlesGeometry = new THREE.BufferGeometry();\n      const particlesCount = 10000;\n      const posArray = new Float32Array(particlesCount * 3);\n      for (let i = 0; i < particlesCount * 3; i++) {\n        posArray[i] = (Math.random() - 0.5) * 10;\n      }\n      particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));\n      const particlesMaterial = new THREE.PointsMaterial({\n        size: 0.05,\n        color: 0x0000ff // Color azul\n      });\n      const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);\n      this.scene.add(particlesMesh);\n\n      // Añadir animación\n      this.animate();\n\n      // Ajustar el renderizador al cambiar el tamaño de la ventana\n      window.addEventListener('resize', this.onWindowResize, false);\n    },\n    animate() {\n      requestAnimationFrame(this.animate);\n      this.renderer.render(this.scene, this.camera);\n    },\n    onWindowResize() {\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }\n};","map":{"version":3,"names":["THREE","name","mounted","initThree","methods","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","setSize","$refs","threeContainer","appendChild","domElement","particlesGeometry","BufferGeometry","particlesCount","posArray","Float32Array","i","Math","random","setAttribute","BufferAttribute","particlesMaterial","PointsMaterial","size","color","particlesMesh","Points","add","animate","addEventListener","onWindowResize","requestAnimationFrame","render","aspect","updateProjectionMatrix"],"sources":["C:\\laragon\\www\\intranet-frontend\\src\\components\\FondoParticulas.vue"],"sourcesContent":["<template>\r\n    <div ref=\"threeContainer\" class=\"three-container\"></div>\r\n  </template>\r\n  \r\n  <script>\r\n  import * as THREE from 'three';\r\n  \r\n  export default {\r\n    name: 'FondoParticulas',\r\n    mounted() {\r\n      this.initThree();\r\n    },\r\n    methods: {\r\n      initThree() {\r\n        // Crear escena\r\n        this.scene = new THREE.Scene();\r\n  \r\n        // Crear cámara\r\n        this.camera = new THREE.PerspectiveCamera(\r\n          75,\r\n          window.innerWidth / window.innerHeight,\r\n          0.1,\r\n          1000\r\n        );\r\n        this.camera.position.z = 5;\r\n  \r\n        // Crear renderizador\r\n        this.renderer = new THREE.WebGLRenderer();\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.$refs.threeContainer.appendChild(this.renderer.domElement);\r\n  \r\n        // Crear partículas\r\n        const particlesGeometry = new THREE.BufferGeometry();\r\n        const particlesCount = 10000;\r\n  \r\n        const posArray = new Float32Array(particlesCount * 3);\r\n        for (let i = 0; i < particlesCount * 3; i++) {\r\n          posArray[i] = (Math.random() - 0.5) * 10;\r\n        }\r\n  \r\n        particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));\r\n  \r\n        const particlesMaterial = new THREE.PointsMaterial({\r\n          size: 0.05,\r\n          color: 0x0000ff, // Color azul\r\n        });\r\n  \r\n        const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);\r\n        this.scene.add(particlesMesh);\r\n  \r\n        // Añadir animación\r\n        this.animate();\r\n  \r\n        // Ajustar el renderizador al cambiar el tamaño de la ventana\r\n        window.addEventListener('resize', this.onWindowResize, false);\r\n      },\r\n      animate() {\r\n        requestAnimationFrame(this.animate);\r\n  \r\n        this.renderer.render(this.scene, this.camera);\r\n      },\r\n      onWindowResize() {\r\n        this.camera.aspect = window.innerWidth / window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .three-container {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: -1;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;;;;AAKE,OAAO,KAAKA,KAAI,MAAO,OAAO;AAE9B,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IACPD,SAASA,CAAA,EAAG;MACV;MACA,IAAI,CAACE,KAAI,GAAI,IAAIL,KAAK,CAACM,KAAK,CAAC,CAAC;;MAE9B;MACA,IAAI,CAACC,MAAK,GAAI,IAAIP,KAAK,CAACQ,iBAAiB,CACvC,EAAE,EACFC,MAAM,CAACC,UAAS,GAAID,MAAM,CAACE,WAAW,EACtC,GAAG,EACH,IACF,CAAC;MACD,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAACC,CAAA,GAAI,CAAC;;MAE1B;MACA,IAAI,CAACC,QAAO,GAAI,IAAId,KAAK,CAACe,aAAa,CAAC,CAAC;MACzC,IAAI,CAACD,QAAQ,CAACE,OAAO,CAACP,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;MAC5D,IAAI,CAACM,KAAK,CAACC,cAAc,CAACC,WAAW,CAAC,IAAI,CAACL,QAAQ,CAACM,UAAU,CAAC;;MAE/D;MACA,MAAMC,iBAAgB,GAAI,IAAIrB,KAAK,CAACsB,cAAc,CAAC,CAAC;MACpD,MAAMC,cAAa,GAAI,KAAK;MAE5B,MAAMC,QAAO,GAAI,IAAIC,YAAY,CAACF,cAAa,GAAI,CAAC,CAAC;MACrD,KAAK,IAAIG,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIH,cAAa,GAAI,CAAC,EAAEG,CAAC,EAAE,EAAE;QAC3CF,QAAQ,CAACE,CAAC,IAAI,CAACC,IAAI,CAACC,MAAM,CAAC,IAAI,GAAG,IAAI,EAAE;MAC1C;MAEAP,iBAAiB,CAACQ,YAAY,CAAC,UAAU,EAAE,IAAI7B,KAAK,CAAC8B,eAAe,CAACN,QAAQ,EAAE,CAAC,CAAC,CAAC;MAElF,MAAMO,iBAAgB,GAAI,IAAI/B,KAAK,CAACgC,cAAc,CAAC;QACjDC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE,QAAQ,CAAE;MACnB,CAAC,CAAC;MAEF,MAAMC,aAAY,GAAI,IAAInC,KAAK,CAACoC,MAAM,CAACf,iBAAiB,EAAEU,iBAAiB,CAAC;MAC5E,IAAI,CAAC1B,KAAK,CAACgC,GAAG,CAACF,aAAa,CAAC;;MAE7B;MACA,IAAI,CAACG,OAAO,CAAC,CAAC;;MAEd;MACA7B,MAAM,CAAC8B,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,cAAc,EAAE,KAAK,CAAC;IAC/D,CAAC;IACDF,OAAOA,CAAA,EAAG;MACRG,qBAAqB,CAAC,IAAI,CAACH,OAAO,CAAC;MAEnC,IAAI,CAACxB,QAAQ,CAAC4B,MAAM,CAAC,IAAI,CAACrC,KAAK,EAAE,IAAI,CAACE,MAAM,CAAC;IAC/C,CAAC;IACDiC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACjC,MAAM,CAACoC,MAAK,GAAIlC,MAAM,CAACC,UAAS,GAAID,MAAM,CAACE,WAAW;MAC3D,IAAI,CAACJ,MAAM,CAACqC,sBAAsB,CAAC,CAAC;MACpC,IAAI,CAAC9B,QAAQ,CAACE,OAAO,CAACP,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IAC9D;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}