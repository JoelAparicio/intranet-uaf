{"ast":null,"code":"export default {\n  name: 'ListaUsuarioRol',\n  data() {\n    return {\n      searchTerm: '',\n      selectedRole: '',\n      roles: ['Administrador', 'Manager'],\n      users: [{\n        id: 1,\n        name: 'Admin User 1',\n        email: 'admin@example.com',\n        role: 'Administrador',\n        status: 'Activo'\n      }, {\n        id: 2,\n        name: 'Admin User 2',\n        email: 'admin2@example.com',\n        role: 'Administrador',\n        status: 'Inactivo'\n      }, {\n        id: 3,\n        name: 'Manager User 1',\n        email: 'manager1@example.com',\n        role: 'Manager',\n        status: 'Activo'\n      }, {\n        id: 4,\n        name: 'Manager User 2',\n        email: 'manager2@example.com',\n        role: 'Manager',\n        status: 'Inactivo'\n      }]\n    };\n  },\n  computed: {\n    filteredUsers() {\n      return this.users.filter(user => {\n        return (this.searchTerm === '' || user.name.toLowerCase().includes(this.searchTerm.toLowerCase())) && (this.selectedRole === '' || user.role === this.selectedRole);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","searchTerm","selectedRole","roles","users","id","email","role","status","computed","filteredUsers","filter","user","toLowerCase","includes"],"sources":["C:\\laragon\\www\\intranet-frontend\\src\\components\\Lista_Usuario_Rol.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-4\">\r\n    <h2>Total de usuarios con sus roles.</h2>\r\n    <p>Encuentre toda la lista de usuarios y sus roles asociados.</p>\r\n    <div class=\"d-flex justify-content-between mb-3\">\r\n      <input type=\"text\" class=\"form-control me-2 w-50\" placeholder=\"Buscar Usuarios\" v-model=\"searchTerm\" />\r\n      <select class=\"form-select w-25\" v-model=\"selectedRole\">\r\n        <option value=\"\">Filtrar por Rol</option>\r\n        <option v-for=\"role in roles\" :key=\"role\" :value=\"role\">{{ role }}</option>\r\n      </select>\r\n    </div>\r\n    <table class=\"table table-bordered text-center\">\r\n      <thead>\r\n        <tr>\r\n          <th>Nombre</th>\r\n          <th>Email</th>\r\n          <th>Rol</th>\r\n          <th>Status</th>\r\n          <th>Acciones</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"user in filteredUsers\" :key=\"user.id\">\r\n          <td>{{ user.name }}</td>\r\n          <td>{{ user.email }}</td>\r\n          <td>{{ user.role }}</td>\r\n          <td>\r\n            <span :class=\"user.status === 'Activo' ? 'badge status-active' : 'badge status-inactive'\">\r\n              {{ user.status }}\r\n            </span>\r\n          </td>\r\n          <td>\r\n            <button class=\"btn btn-link text-dark\"><i class=\"fas fa-trash-alt\"></i></button>\r\n            <button class=\"btn btn-link text-dark\"><i class=\"fas fa-eye\"></i></button>\r\n            <button class=\"btn btn-link text-dark\"><i class=\"fas fa-ellipsis-v\"></i></button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ListaUsuarioRol',\r\n  data() {\r\n    return {\r\n      searchTerm: '',\r\n      selectedRole: '',\r\n      roles: ['Administrador', 'Manager'],\r\n      users: [\r\n        { id: 1, name: 'Admin User 1', email: 'admin@example.com', role: 'Administrador', status: 'Activo' },\r\n        { id: 2, name: 'Admin User 2', email: 'admin2@example.com', role: 'Administrador', status: 'Inactivo' },\r\n        { id: 3, name: 'Manager User 1', email: 'manager1@example.com', role: 'Manager', status: 'Activo' },\r\n        { id: 4, name: 'Manager User 2', email: 'manager2@example.com', role: 'Manager', status: 'Inactivo' },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    filteredUsers() {\r\n      return this.users.filter(user => {\r\n        return (\r\n          (this.searchTerm === '' || user.name.toLowerCase().includes(this.searchTerm.toLowerCase())) &&\r\n          (this.selectedRole === '' || user.role === this.selectedRole)\r\n        );\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table {\r\n  margin-top: 20px;\r\n}\r\n.badge {\r\n  padding: 10px;\r\n  font-size: 0.8em;\r\n}\r\n.status-active,\r\n.status-inactive {\r\n  display: inline-block;\r\n  width: 100px; /* Ancho espec√≠fico */\r\n  text-align: center;\r\n}\r\n.status-active {\r\n  background-color: #28a745;\r\n}\r\n.status-inactive {\r\n  background-color: #dc3545;\r\n}\r\n</style>\r\n"],"mappings":"AA2CA,eAAe;EACbA,IAAI,EAAE,iBAAiB;EACvBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,YAAY,EAAE,EAAE;MAChBC,KAAK,EAAE,CAAC,eAAe,EAAE,SAAS,CAAC;MACnCC,KAAK,EAAE,CACL;QAAEC,EAAE,EAAE,CAAC;QAAEN,IAAI,EAAE,cAAc;QAAEO,KAAK,EAAE,mBAAmB;QAAEC,IAAI,EAAE,eAAe;QAAEC,MAAM,EAAE;MAAS,CAAC,EACpG;QAAEH,EAAE,EAAE,CAAC;QAAEN,IAAI,EAAE,cAAc;QAAEO,KAAK,EAAE,oBAAoB;QAAEC,IAAI,EAAE,eAAe;QAAEC,MAAM,EAAE;MAAW,CAAC,EACvG;QAAEH,EAAE,EAAE,CAAC;QAAEN,IAAI,EAAE,gBAAgB;QAAEO,KAAK,EAAE,sBAAsB;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAS,CAAC,EACnG;QAAEH,EAAE,EAAE,CAAC;QAAEN,IAAI,EAAE,gBAAgB;QAAEO,KAAK,EAAE,sBAAsB;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE;MAAW,CAAC;IAEzG,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACN,KAAK,CAACO,MAAM,CAACC,IAAG,IAAK;QAC/B,OACE,CAAC,IAAI,CAACX,UAAS,KAAM,EAAC,IAAKW,IAAI,CAACb,IAAI,CAACc,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACb,UAAU,CAACY,WAAW,CAAC,CAAC,CAAC,MACzF,IAAI,CAACX,YAAW,KAAM,EAAC,IAAKU,IAAI,CAACL,IAAG,KAAM,IAAI,CAACL,YAAY;MAEhE,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}