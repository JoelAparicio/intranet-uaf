{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from 'axios';\nimport apiConfig from '@/config/api';\nexport default createStore({\n  state: {\n    authToken: localStorage.getItem('auth_token') || '',\n    //Token de autenticaci贸n\n    authStatus: '',\n    //Estado de autenticaci贸n\n    registerStatus: '' //Estado de registro\n  },\n  mutations: {\n    auth_request(state) {\n      state.authStatus = 'loading';\n    },\n    auth_success(state, token) {\n      state.authStatus = 'success';\n      state.authToken = token;\n    },\n    auth_error(state) {\n      state.authStatus = 'error';\n    },\n    logout(state) {\n      state.authStatus = '';\n      state.authToken = '';\n    },\n    register_request(state) {\n      state.registerStatus = 'loading';\n    },\n    register_success(state) {\n      state.registerStatus = 'success';\n    },\n    register_error(state) {\n      state.registerStatus = 'error';\n    }\n  },\n  actions: {\n    async login({\n      commit\n    }, user) {\n      commit('auth_request');\n      try {\n        const response = await axios.post(apiConfig.endpoints.login, user);\n        const token = response.data.token;\n        localStorage.setItem('auth_token', token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        commit('auth_success', token);\n        return response;\n      } catch (error) {\n        commit('auth_error');\n        localStorage.removeItem('auth_token');\n        throw error;\n      }\n    },\n    async register({\n      commit\n    }, user) {\n      commit('register_request');\n      try {\n        const response = await axios.post(apiConfig.endpoints.register, user);\n        commit('register_success');\n        return response;\n      } catch (error) {\n        commit('register_error');\n        throw error;\n      }\n    },\n    logout({\n      commit\n    }) {\n      return new Promise(resolve => {\n        commit('logout');\n        localStorage.removeItem('auth_token');\n        delete axios.defaults.headers.common['Authorization'];\n        resolve();\n      });\n    }\n  },\n  getters: {\n    isAuthenticated: state => !!state.authToken,\n    authStatus: state => state.authStatus,\n    registerStatus: state => state.registerStatus\n  }\n});","map":{"version":3,"names":["createStore","axios","apiConfig","state","authToken","localStorage","getItem","authStatus","registerStatus","mutations","auth_request","auth_success","token","auth_error","logout","register_request","register_success","register_error","actions","login","commit","user","response","post","endpoints","data","setItem","defaults","headers","common","error","removeItem","register","Promise","resolve","getters","isAuthenticated"],"sources":["C:/xampp/htdocs/intranet/intranet-frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\r\nimport axios from 'axios'\r\nimport apiConfig from '@/config/api'\r\n\r\nexport default createStore({\r\n    state: {\r\n        authToken: localStorage.getItem('auth_token') || '', //Token de autenticaci贸n\r\n        authStatus: '', //Estado de autenticaci贸n\r\n        registerStatus: ''  //Estado de registro\r\n    },\r\n    mutations: {\r\n        auth_request(state) {\r\n            state.authStatus = 'loading'\r\n        },\r\n        auth_success(state, token) {\r\n            state.authStatus = 'success'\r\n            state.authToken = token\r\n        },\r\n        auth_error(state) {\r\n            state.authStatus = 'error'\r\n        },\r\n        logout(state) {\r\n            state.authStatus = ''\r\n            state.authToken = ''\r\n        },\r\n        register_request(state) {\r\n            state.registerStatus = 'loading'\r\n        },\r\n        register_success(state) {\r\n            state.registerStatus = 'success'\r\n        },\r\n        register_error(state) {\r\n            state.registerStatus = 'error'\r\n        }\r\n    },\r\n    actions: {\r\n        async login({ commit }, user) {\r\n            commit('auth_request')\r\n            try {\r\n                const response = await axios.post(apiConfig.endpoints.login, user)\r\n                const token = response.data.token\r\n                localStorage.setItem('auth_token', token)\r\n                axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n                commit('auth_success', token)\r\n                return response\r\n            } catch (error) {\r\n                commit('auth_error')\r\n                localStorage.removeItem('auth_token')\r\n                throw error\r\n            }\r\n        },\r\n        async register({ commit }, user) {\r\n            commit('register_request')\r\n            try {\r\n                const response = await axios.post(apiConfig.endpoints.register, user)\r\n                commit('register_success')\r\n                return response\r\n            } catch (error) {\r\n                commit('register_error')\r\n                throw error\r\n            }\r\n        },\r\n        logout({ commit }) {\r\n            return new Promise((resolve) => {\r\n                commit('logout')\r\n                localStorage.removeItem('auth_token')\r\n                delete axios.defaults.headers.common['Authorization']\r\n                resolve()\r\n            })\r\n        }\r\n    },\r\n    getters: {\r\n        isAuthenticated: state => !!state.authToken,\r\n        authStatus: state => state.authStatus,\r\n        registerStatus: state => state.registerStatus\r\n    }\r\n})"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}