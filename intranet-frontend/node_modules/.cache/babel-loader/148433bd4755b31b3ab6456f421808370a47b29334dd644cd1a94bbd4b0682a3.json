{"ast":null,"code":"import { createStore } from 'vuex';\nimport axios from 'axios';\nexport default createStore({\n  state: {\n    token: localStorage.getItem('token') || '',\n    user: {}\n  },\n  mutations: {\n    auth_success(state, {\n      token,\n      user\n    }) {\n      state.token = token;\n      state.user = user;\n    },\n    logout(state) {\n      state.token = '';\n      state.user = {};\n    }\n  },\n  actions: {\n    async login({\n      commit\n    }, user) {\n      try {\n        const response = await axios.post('http://localhost:8000/api/sync-ldap-user', user);\n        const token = response.data.token;\n        const userData = response.data.user;\n        localStorage.setItem('token', token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        commit('auth_success', {\n          token,\n          user: userData\n        });\n      } catch (error) {\n        console.error(error);\n        throw error;\n      }\n    },\n    logout({\n      commit\n    }) {\n      commit('logout');\n      localStorage.removeItem('token');\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  },\n  getters: {\n    isAuthenticated: state => !!state.token,\n    user: state => state.user\n  }\n});","map":{"version":3,"names":["createStore","axios","state","token","localStorage","getItem","user","mutations","auth_success","logout","actions","login","commit","response","post","data","userData","setItem","defaults","headers","common","error","console","removeItem","getters","isAuthenticated"],"sources":["C:/laragon/www/intranet-frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport axios from 'axios'\n\nexport default createStore({\n  state: {\n    token: localStorage.getItem('token') || '',\n    user: {}\n  },\n  mutations: {\n    auth_success(state, { token, user }) {\n      state.token = token\n      state.user = user\n    },\n    logout(state) {\n      state.token = ''\n      state.user = {}\n    }\n  },\n  actions: {\n    async login({ commit }, user) {\n      try {\n        const response = await axios.post('http://localhost:8000/api/sync-ldap-user', user)\n        const token = response.data.token\n        const userData = response.data.user\n        localStorage.setItem('token', token)\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n        commit('auth_success', { token, user: userData })\n      } catch (error) {\n        console.error(error)\n        throw error\n      }\n    },\n    logout({ commit }) {\n      commit('logout')\n      localStorage.removeItem('token')\n      delete axios.defaults.headers.common['Authorization']\n    }\n  },\n  getters: {\n    isAuthenticated: state => !!state.token,\n    user: state => state.user\n  }\n})\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;IAC1CC,IAAI,EAAE,CAAC;EACT,CAAC;EACDC,SAAS,EAAE;IACTC,YAAYA,CAACN,KAAK,EAAE;MAAEC,KAAK;MAAEG;IAAK,CAAC,EAAE;MACnCJ,KAAK,CAACC,KAAK,GAAGA,KAAK;MACnBD,KAAK,CAACI,IAAI,GAAGA,IAAI;IACnB,CAAC;IACDG,MAAMA,CAACP,KAAK,EAAE;MACZA,KAAK,CAACC,KAAK,GAAG,EAAE;MAChBD,KAAK,CAACI,IAAI,GAAG,CAAC,CAAC;IACjB;EACF,CAAC;EACDI,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAC;MAAEC;IAAO,CAAC,EAAEN,IAAI,EAAE;MAC5B,IAAI;QACF,MAAMO,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,0CAA0C,EAAER,IAAI,CAAC;QACnF,MAAMH,KAAK,GAAGU,QAAQ,CAACE,IAAI,CAACZ,KAAK;QACjC,MAAMa,QAAQ,GAAGH,QAAQ,CAACE,IAAI,CAACT,IAAI;QACnCF,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEd,KAAK,CAAC;QACpCF,KAAK,CAACiB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAI,UAASjB,KAAM,EAAC;QAClES,MAAM,CAAC,cAAc,EAAE;UAAET,KAAK;UAAEG,IAAI,EAAEU;QAAS,CAAC,CAAC;MACnD,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB,MAAMA,KAAK;MACb;IACF,CAAC;IACDZ,MAAMA,CAAC;MAAEG;IAAO,CAAC,EAAE;MACjBA,MAAM,CAAC,QAAQ,CAAC;MAChBR,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC;MAChC,OAAOtB,KAAK,CAACiB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;IACvD;EACF,CAAC;EACDI,OAAO,EAAE;IACPC,eAAe,EAAEvB,KAAK,IAAI,CAAC,CAACA,KAAK,CAACC,KAAK;IACvCG,IAAI,EAAEJ,KAAK,IAAIA,KAAK,CAACI;EACvB;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}