{"ast":null,"code":"import \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\nexport default {\n  name: 'ListaUsuarioRol',\n  components: {\n    FontAwesomeIcon\n  },\n  data() {\n    return {\n      searchTerm: '',\n      selectedRole: '',\n      roles: [],\n      users: []\n    };\n  },\n  computed: {\n    filteredUsers() {\n      return this.users.filter(user => {\n        return (this.searchTerm === '' || user.nombre.toLowerCase().includes(this.searchTerm.toLowerCase())) && (this.selectedRole === '' || user.roles.includes(this.selectedRole));\n      });\n    }\n  },\n  methods: {\n    async fetchUsers() {\n      try {\n        const response = await axios.get('http://localhost:8000/api/administrar_usuarios');\n        if (response.data.status) {\n          this.users = response.data.data;\n          this.roles = [...new Set(this.users.flatMap(user => user.roles))];\n        }\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    },\n    async deleteUser(id) {\n      try {\n        await axios.put(`http://localhost:8000/api/borrar_usuario/${id}`);\n        this.fetchUsers(); // Refrescar la lista de usuarios después de borrar uno\n      } catch (error) {\n        console.error('Error deleting user:', error);\n      }\n    },\n    async editUser(id) {\n      // Aquí puedes abrir un modal o navegar a una página de edición de usuario\n      console.log('Editar usuario:', id);\n    },\n    toggleUserStatus(user) {\n      user.estado = user.estado === 'Activo' ? 'Inactivo' : 'Activo';\n      // Aquí podrías hacer una solicitud a la API para actualizar el estado del usuario en el servidor\n    }\n  },\n  mounted() {\n    this.fetchUsers();\n  }\n};","map":{"version":3,"names":["axios","FontAwesomeIcon","name","components","data","searchTerm","selectedRole","roles","users","computed","filteredUsers","filter","user","nombre","toLowerCase","includes","methods","fetchUsers","response","get","status","Set","flatMap","error","console","deleteUser","id","put","editUser","log","toggleUserStatus","estado","mounted"],"sources":["C:\\laragon\\www\\intranet-frontend\\src\\components\\Lista_Usuario_Rol.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-4 mb-4\">\r\n    <div class=\"card shadow-sm no-animation\">\r\n      <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n        <div>\r\n          <h2>Administracion de usuarios</h2>\r\n          <p>Encuentre toda la lista de usuarios y sus roles asociados.</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"d-flex justify-content-between mb-3\">\r\n          <input type=\"text\" class=\"form-control me-2 w-50\" placeholder=\"Buscar Usuarios\" v-model=\"searchTerm\" />\r\n          <select class=\"form-select w-25\" v-model=\"selectedRole\">\r\n            <option value=\"\">Filtrar por Rol</option>\r\n            <option v-for=\"role in roles\" :key=\"role\" :value=\"role\">{{ role }}</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-bordered text-center\">\r\n            <thead>\r\n              <tr>\r\n                <th>Nombre</th>\r\n                <th>Email</th>\r\n                <th>Rol</th>\r\n                <th>Status</th>\r\n                <th>Acciones</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"user in filteredUsers\" :key=\"user.id\">\r\n                <td>{{ user.nombre }}</td>\r\n                <td>{{ user.correo_electronico }}</td>\r\n                <td>{{ user.roles.join(', ') }}</td>\r\n                <td>\r\n                  <span :class=\"user.estado === 'Activo' ? 'badge status-active' : 'badge status-inactive'\">\r\n                    {{ user.estado }}\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <button class=\"btn btn-link text-danger btn-action\" @click=\"deleteUser(user.id)\">\r\n                    <font-awesome-icon :icon=\"['fas', 'ban']\" class=\"fa-lg\" />\r\n                  </button>\r\n                  <button class=\"btn btn-link text-primary btn-action\" @click=\"editUser(user.id)\">\r\n                    <font-awesome-icon :icon=\"['fas', 'user-pen']\" class=\"fa-lg\" />\r\n                  </button>\r\n                  <transition name=\"fade\" mode=\"out-in\">\r\n                    <button class=\"btn btn-link text-dark btn-action\" @click=\"toggleUserStatus(user)\">\r\n                      <font-awesome-icon :icon=\"user.estado === 'Activo' ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\" class=\"fa-lg\" />\r\n                    </button>\r\n                  </transition>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\r\n\r\nexport default {\r\n  name: 'ListaUsuarioRol',\r\n  components: {\r\n    FontAwesomeIcon\r\n  },\r\n  data() {\r\n    return {\r\n      searchTerm: '',\r\n      selectedRole: '',\r\n      roles: [],\r\n      users: []\r\n    };\r\n  },\r\n  computed: {\r\n    filteredUsers() {\r\n      return this.users.filter(user => {\r\n        return (\r\n          (this.searchTerm === '' || user.nombre.toLowerCase().includes(this.searchTerm.toLowerCase())) &&\r\n          (this.selectedRole === '' || user.roles.includes(this.selectedRole))\r\n        );\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    async fetchUsers() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/administrar_usuarios');\r\n        if (response.data.status) {\r\n          this.users = response.data.data;\r\n          this.roles = [...new Set(this.users.flatMap(user => user.roles))];\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching users:', error);\r\n      }\r\n    },\r\n    async deleteUser(id) {\r\n      try {\r\n        await axios.put(`http://localhost:8000/api/borrar_usuario/${id}`);\r\n        this.fetchUsers(); // Refrescar la lista de usuarios después de borrar uno\r\n      } catch (error) {\r\n        console.error('Error deleting user:', error);\r\n      }\r\n    },\r\n    async editUser(id) {\r\n      // Aquí puedes abrir un modal o navegar a una página de edición de usuario\r\n      console.log('Editar usuario:', id);\r\n    },\r\n    toggleUserStatus(user) {\r\n      user.estado = user.estado === 'Activo' ? 'Inactivo' : 'Activo';\r\n      // Aquí podrías hacer una solicitud a la API para actualizar el estado del usuario en el servidor\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchUsers();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card.no-animation {\r\n  border: 1px solid #ddd;\r\n  border-radius: 0.5rem;\r\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n}\r\n.card-header {\r\n  background-color: #f8f9fa;\r\n  border-bottom: 1px solid #ddd;\r\n  padding: 1rem 1.25rem;\r\n}\r\n.card-body {\r\n  padding: 1.25rem;\r\n}\r\n.table {\r\n  margin-top: 20px;\r\n}\r\n.badge {\r\n  padding: 10px;\r\n  font-size: 0.8em;\r\n}\r\n.status-active,\r\n.status-inactive {\r\n  display: inline-block;\r\n  width: 100px;\r\n  text-align: center;\r\n}\r\n.status-active {\r\n  background-color: #28a745;\r\n}\r\n.status-inactive {\r\n  background-color: #dc3545;\r\n}\r\n.fa-lg {\r\n  font-size: 2em;\r\n}\r\n.fade-enter-active, .fade-leave-active {\r\n  transition: opacity 0.5s ease-in-out;\r\n}\r\n.fade-enter, .fade-leave-to {\r\n  opacity: 0;\r\n}\r\n.btn-action {\r\n  transition: transform 0.2s;\r\n}\r\n.btn-action:hover {\r\n  transform: scale(1.1);\r\n}\r\n.text-danger:hover {\r\n  color: #e3342f;\r\n}\r\n.text-primary:hover {\r\n  color: #007bff;\r\n}\r\n.text-dark:hover {\r\n  color: #343a40;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;AA6DA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,eAAc,QAAS,8BAA8B;AAE9D,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,YAAY,EAAE,EAAE;MAChBC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,IAAG,IAAK;QAC/B,OACE,CAAC,IAAI,CAACP,UAAS,KAAM,EAAC,IAAKO,IAAI,CAACC,MAAM,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACV,UAAU,CAACS,WAAW,CAAC,CAAC,CAAC,MAC3F,IAAI,CAACR,YAAW,KAAM,EAAC,IAAKM,IAAI,CAACL,KAAK,CAACQ,QAAQ,CAAC,IAAI,CAACT,YAAY,CAAC;MAEvE,CAAC,CAAC;IACJ;EACF,CAAC;EACDU,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMlB,KAAK,CAACmB,GAAG,CAAC,gDAAgD,CAAC;QAClF,IAAID,QAAQ,CAACd,IAAI,CAACgB,MAAM,EAAE;UACxB,IAAI,CAACZ,KAAI,GAAIU,QAAQ,CAACd,IAAI,CAACA,IAAI;UAC/B,IAAI,CAACG,KAAI,GAAI,CAAC,GAAG,IAAIc,GAAG,CAAC,IAAI,CAACb,KAAK,CAACc,OAAO,CAACV,IAAG,IAAKA,IAAI,CAACL,KAAK,CAAC,CAAC,CAAC;QACnE;MACF,EAAE,OAAOgB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACD,MAAME,UAAUA,CAACC,EAAE,EAAE;MACnB,IAAI;QACF,MAAM1B,KAAK,CAAC2B,GAAG,CAAE,4CAA2CD,EAAG,EAAC,CAAC;QACjE,IAAI,CAACT,UAAU,CAAC,CAAC,EAAE;MACrB,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACD,MAAMK,QAAQA,CAACF,EAAE,EAAE;MACjB;MACAF,OAAO,CAACK,GAAG,CAAC,iBAAiB,EAAEH,EAAE,CAAC;IACpC,CAAC;IACDI,gBAAgBA,CAAClB,IAAI,EAAE;MACrBA,IAAI,CAACmB,MAAK,GAAInB,IAAI,CAACmB,MAAK,KAAM,QAAO,GAAI,UAAS,GAAI,QAAQ;MAC9D;IACF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACf,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}