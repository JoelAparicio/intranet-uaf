# docker-compose.yml - Para usar SQL Server institucional

services:
  # ==================== BACKEND LARAVEL ====================
  backend:
    build:
      context: ./intranet-backend
      dockerfile: Dockerfile
    container_name: intranet-backend
    env_file:
      - ./intranet-backend/.env.docker
    volumes:
      - ./intranet-backend:/var/www/html
      - backend_storage:/var/www/html/storage
    networks:
      - intranet-network
    restart: unless-stopped

  # ==================== FRONTEND VUE ====================
  frontend:
    build:
      context: ./intranet-frontend
      dockerfile: Dockerfile
      target: production
    container_name: intranet-frontend
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - intranet-network
    restart: unless-stopped

  # ==================== NGINX PROXY ====================
  nginx:
    image: nginx:alpine
    container_name: intranet-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker-config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker-config/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./intranet-backend/public:/var/www/html/public
      - backend_storage:/var/www/html/storage:rw
      - ./intranet-backend/storage/app/public:/var/www/storage:ro
    depends_on:
      - backend
      - frontend
    networks:
      - intranet-network
    restart: unless-stopped

# ==================== VOLÃšMENES PERSISTENTES ====================
volumes:
  backend_storage:
    driver: local

# ==================== RED INTERNA ====================
networks:
  intranet-network:
    driver: bridge